DESCRIPTION OF FLEET DISPLAY

If you have not read the planets.txt file then go and read it. The
fleet display mechanism is identical and this file assumes you're
already "familiar" with the meaning of view, function, filter, marker,
flag, etc. etc.


PLANETS vs. FLEETS

The main difference between the two displays is that while Stars!
planetary reports contain (almost) all the relevant data for a decent
display, the fleet reports are missing some fundamental stuff, such as
EXACT fleet composition.

I have devised a method to provide the information to starana, but it
costs time, since it requires you to encode the fleet composition in
the fleet name. It also requires you to enter the ship design
information in the master file, to have starana know about things like
max fuel or max cargo. While this information is not, in general,
required to obtain a fleet display, there are some functions (those
dealing with specific designs or max cargo space, for example) who
REQUIRE the additional information.

I have tried to arrange things so that there are no "half-working"
functions. If you try to use one of the functions that require the
information without providing it then the result will be consistent:
e.g. ALL fleets get filtered, regardless of what you asked (so you can
notice that something's wrong).


FLEET DUPLICATES

If more that one fleet reports is given (typical in a team game) then
starana will have a hard time trying to figure out the duplicates (and
removing them). The basic idea used by starana is that a fleet is
identified by the couple owner+id number. It is then important not to
screw up this information. Basically this means that you must NOT
alter the #??? which appears at the end of the default fleet name. Use
whatever you want for the name, but keep that part intact, otherwise
starana will be unable to detect the duplicate and you'll see "weird"
fleets appear on the display.

Another problem: if you generate the report AFTER you've played the
turn, after you've had fun splitting/merging fleet, this will cause
your fleet ids to be altered and thus become inconsistent with the
reports given by your allies. If you need to have accurate displays of
the team fleets generate the report BEFORE you play the turn.  You can
then regenerate them when you're fine-tuning the shipping routes and
using starana's simulation capability to see how much minerals you
will have on your production worlds in 5 years.....


PROVIDING FLEET INFORMATION TO STARANA

There are two steps:
1) giving design information to starana.
2) altering the fleet name to give indication of the composition.

How the design information is given can be seen by looking at the
example file sa-complex.smf. It's the same thing as sa.smf, but all
the comments relative to the stuff explained in sa.smf has been
removed and the commented part is the "new" one, i.e. design
specification and fleet naming.

Go and read sa-complex.smf now, it'll take a short time.

Ok, now you can understand the rest... :)

Apart from all the useful information given in the design { .. }
specification there's one vital part: the composition abbreviation.  I
suggest to keep it SHORT, I usually use mnemonic things like SFX for
Super Fuel Xports or CoH for Change of Heart, etc.  You then use as a
fleet name a string which is a sequence of abbreviation and ship
numbers. For example "CoH2 SFX1 #132" to indicate 2 Change of Hearts
and one Super Fuel Xport. NOTE that you must not kill the #id number
in the process!!!
NOTE also that the abbreviation can't contain numbers/ Otherwise
starana will never be able to say when the abbreviation ends and when
the number of ships starts!!!

Ok, so this fleet naming looks extremely annoying. Trust me, it is :)
Actually it's less annoying than you think, for two reasons. I find
useful to use the abbreviations since they also tell ME what the fleet
composition is. "Destroyer+" doesn't say much about all the
layers/freighters/bombers/SFXs which may be flying with the
destroyers.  Also, to make life easier starana will check the
consistency of the number of ships and of the total fleet mass between
the report and the composition it got from the name, and complain
about all those fleet who don't match. The information is available in
the Fleet Analysis part of the report-log file.


FLEET INFORMATION "GENERATED" By STARANA

Starana uses the position and movement vector of enemy fleets to
determine the origin and destination of the fleet. In order to avoid
ridiculous results (e.g. scout will arrive at XXX in 120 turns) it
limits the ETA of the fleets to the number of turns in the future
which was requested. For friendly fleets (whose destination is known)
only the origin determination is performed.


AVAILABLE FLEET FUNCTIONS


********* null function, do nothing at all
	name:		- (nothing) -
	category:	General
	description:	This function does nothing at all.


********* associate a marker to a fleet
	name:		Set Marker
	category:	General
	description:	This function associates a marker to a fleet:\n[3]1=dot, 2=cross, 3=box, 4=square, 5=circle, 6=flag.
			[3]  Marker type


********* associate fixed data to a fleet
	name:		Set Data
	category:	General
	description:	This function associates single value data to a fleet.\n[3] Data is assumed to be in the range [0,100].
			[3]  Data value


********* set marker color
	name:		Color: marker
	category:	General
	description:	This function sets the color of the marker of the fleet.\n[0] specify the color number or 0 to indicate the color of the owner.
			[0]  Color


********* set color of single pieslice data
	name:		Color: data
	category:	General
	description:	This function sets the color of the data associated to a fleet\n(only if it's single-valued).\n[0] specify the color number or 0 to indicate the color of the owner.
			[0]  Color


*********  associate circles to a fleet
	name:		Set Circles
	category:	Movement
	description:	This function associates a series of circles to a fleet.\n[0] use 0 to specify the owner's color.
			[0]  Color
			[3]  Circle radius
			[4]  N. of circles


********* random filter
	name:		Filter: random
	category:	General
	description:	Randomly filters the fleet out.
			[1]  Fields affect mask
			[2]  Negate filter
			[3]  Chance %
			[4]  Random seed


********* unconditional filter
	name:		Filter: unconditional
	category:	General
	description:	Filters out all fleets.
			[1]  Fields affect mask
			[2]  Negate filter


********* filter on owner
	name:		Filter: owner
	category:	General
	description:	Filters fleets depending on their owner.\n[0] use race number or 0 for current viewpoint.
			[0]  Race
			[1]  Fields affect mask
			[2]  Negate filter


********* filter if orbiting a world
	name:		Filter: orbiting
	category:	General
	description:	Filters fleets which are orbiting around a planet.
			[1]  Fields affect mask
			[2]  Negate filter


********* filter on distance
	name:		Filter: distance
	category:	General
	description:	Filter fleets depending on their distance from a planet.[0] use -1 or -2 to specify the first or second selected planet.
			[0]  Planet id
			[1]  Fields affect mask
			[2]  Negate filter
			[3]  Min. distance
			[4]  Max. distance


********* associate scanning circle(s) to a fleet
	name:		Scanning
	category:	Capabilities
	description:	This function generates a circle with a size based on the fleet's\nscanning ranges.


********* associate pie with size depending on cargo
	name:		Cargo
	category:	Capabilities
	description:	This function associates data to a fleet depending on its cargo.\nNOTE: right now it's a single-value display!
			[4]  Full triangle at
			[5]  Show ironium
			[6]  Show boranium
			[7]  Show germanium
			[8]  Show colonists


********* associate pie with size depending on cargo space
	name:		Cargo space
	category:	Capabilities
	description:	This function associates data to a fleet depending on its cargo space.\n[5] wheneter to use the total cargo space or the currently available space.
			[4]  Full triangle at
			[5]  Show available


*********  filter on ship cargo
	name:		Filter: cargo
	category:	Capabilities
	description:	Filters fleets depending on their cargo.\n[3..8] use min=0 max=0 to ignore the field.
			[1]  Fields affect mask
			[2]  Negate filter
			[3]  Min ironium
			[4]  Max ironium
			[5]  Min boranium
			[6]  Max boranium
			[7]  Min germanium
			[8]  Max germanium


********* filter on ship colonists
	name:		Filter: colonists
	category:	Capabilities
	description:	Filters fleets depending on their colonists cargo.\n[3,4] selected interval.
			[1]  Fields affect mask
			[2]  Negate filter
			[3]  Min colonists
			[4]  Max colonists


********* filter fleet on available cargo space
	name:		Filter: cargo space
	category:	Capabilities
	description:	Filters fleets depending on their current empty cargo space.\n[3,4] selected range.
			[1]  Fields affect mask
			[2]  Negate filter
			[3]  Min space
			[4]  Max space


********* associate pie with size depending on mass
	name:		Mass
	category:	Composition
	description:	This function associates data to a fleet depending on the total fleet mass.
			[4]  Full triangle at


********* associate pie with size depending on generic composition
	name:		Composition
	category:	Composition
	description:	This function associates data to a fleet depending on the number of\nships in the fleet. You can exclude certain classes from the count.\n[5..9] select what classes NOT to include in the count.
			[4]  Full triangle at
			[5]  Exclude scouts
			[6]  Exclude unarmed
			[7]  Exclude warship
			[8]  Exclude utility
			[9]  Exclude bomber


********* add a line from fleet to its origin
	name:		Destination
	category:	Movement
	description:	This function adds a line which indicates where the fleet is going.


********* add a line from fleet to its destination
	name:		Origin
	category:	Movement
	description:	This function adds a line which indicates where the fleet is coming from.


********* this function sets the color of the line
	name:		Line: color
	category:	Movement
	description:	This function sets the color of a line associated to a fleet.\n[0] specify the color number or 0 to indicate the color of the owner.
			[0]  Color


********* kill on destination planet
	name:		Filter: destination
	category:	Movement
	description:	Filter fleets whose destination is the specified planet.\n[0] specify id 0 for any planet or -1/-2 to indicate the 1st or 2nd selected.\n[3] specify 0 to ignore, 1 to filter only friendly fleets, 2 for enemy fleets\n
			[0]  Planet ID
			[1]  Fields affect mask
			[2]  Negate filter
			[3]  Friend


********* the default fleet name functions

	name:		Set Fleet Name
	category:	Names
	description:	This function associates a name (but no ID) to a fleet.


********* set name composed of fleet name and fleet id
	name:		Set Fleet Name+Id
	category:	Names
	description:	This function associates to a fleet a name identical to that used in Stars!.

********* use the # of ships in a fleet to set the name
	name:		Set # of ships
	category:	Names
	description:	This function associates to a fleet a name which is the number of ships\nin the fleet.\nNOTE: contrary to Stars! superimposed fleets are NOT summed.\n[5..9] select what classes NOT to include in the count.
			[5]  Exclude scouts
			[6]  Exclude unarmed
			[7]  Exclude warship
			[8]  Exclude utility
			[9]  Exclude bomber


********* set name color
	name:		Color: name
	category:	Names
	description:	This function sets the color of the name of the fleet.\n[0] use 0 to specify the owner's color.
			[0]  Color



ADDING FLEET FUNCTIONS

Identical to the planet case....
